{
    "version": "2.43.0.1-rc2",
    "description": "Distributed version control system (Latest)",
    "homepage": "https://gitforwindows.org",
    "license": "GPL-2.0-only",
    "notes": [
        "Set Git Credential Manager Core by running: \"git config --global credential.helper manager\"",
        "",
        "To add context menu entries, run '$dir\\install-context.reg'",
        "",
        "To create file-associations for .git* and .sh files, run '$dir\\install-file-associations.reg'"
    ],
    "architecture": {
        "64bit": {
            "url": "https://github.com/git-for-windows/git/releases/download/v2.43.0-rc2.windows.1/PortableGit-2.43.0-rc2-64-bit.7z.exe#/dl.7z",
            "hash": "4a364e3b6b02357e316293223f620431dfabe665ea19beb6c2ae995effa6f48f"
        },
        "32bit": {
            "url": "https://github.com/git-for-windows/git/releases/download/v2.43.0-rc2.windows.1/PortableGit-2.43.0-rc2-32-bit.7z.exe#/dl.7z",
            "hash": "6c66cf90bfc634a93e4587f6b76e0c126a244d5f87421dc08eeb585bf7bef048"
        }
    },
    "post_install": [
        "'install-context', 'uninstall-context', 'install-file-associations', 'uninstall-file-associations' | ForEach-Object {",
        "    $reg_file_in  = \"$bucketsdir\\main\\scripts\\git\\$_.reg\"",
        "    $reg_file_out = \"$dir\\$_.reg\"",
        "    $git_root     = \"$dir\".Replace('\\', '\\\\')",
        "    if (Test-Path $reg_file_in) {",
        "        $content = Get-Content $reg_file_in",
        "        $content = $content.Replace('$git_root', $git_root)",
        "        if ($global) {",
        "            $content = $content.Replace('HKEY_CURRENT_USER', 'HKEY_LOCAL_MACHINE')",
        "        }",
        "        Set-Content -Path $reg_file_out -Value $content -Encoding Ascii",
        "    }",
        "}"
    ],
    "bin": [
        "bin\\sh.exe",
        "bin\\bash.exe",
        "cmd\\git.exe",
        "cmd\\gitk.exe",
        "cmd\\git-gui.exe",
        "cmd\\scalar.exe",
        "usr\\bin\\tig.exe",
        "git-bash.exe"
    ],
    "shortcuts": [
        [
            "git-bash.exe",
            "Git Bash (Latest)",
            "--cd-to-home"
        ],
        [
            "cmd\\git-gui.exe",
            "Git GUI (Latest)"
        ]
    ],
    "env_set": {
        "GIT_INSTALL_ROOT": "$dir"
    },
    "checkver": {
        "script": [
            "$latest = Select-String -InputObject $(Invoke-WebRequest -Uri \"https://github.com/git-for-windows/git/releases/\").Content -Pattern 'tag/v(?<version>[\\d.]+)(?<candidate>(-rc\\d\\d?)?).windows.(?<patch>\\d\\d?).+Git f'",
            "$versionText = \"$($latest.Matches.Groups[2].Value).$($latest.Matches.Groups[4].Value)$($latest.Matches.Groups[3].Value)\"",
            "$matchResult = Select-String -InputObject $versionText -Pattern '(?<version>[\\d.]+(?<candidate>-rc\\d\\d?)?)'",
            "$fileVersionSuffix = $matchResult.Matches.Groups[2].Value -eq '' ? ($latest.Matches.Groups[4].Value -eq 1 ? '': \".$($latest.Matches.Groups[4].Value)\") : $matchResult.Matches.Groups[2].Value",
            "Write-Output \"$($latest.Matches.Groups[2].Value).$($latest.Matches.Groups[4].Value)$($latest.Matches.Groups[3].Value)-suffix$fileVersionSuffix\""
        ],
        "regex": "(?<version>[\\d.]+(?<candidate>-rc\\d\\d?)?)-suffix(?<suffix>.+)?"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/git-for-windows/git/releases/download/v$majorVersion.$minorVersion.$patchVersion$matchCandidate.windows.$buildVersion/PortableGit-$majorVersion.$minorVersion.$patchVersion$matchSuffix-64-bit.7z.exe#/dl.7z"
            },
            "32bit": {
                "url": "https://github.com/git-for-windows/git/releases/download/v$majorVersion.$minorVersion.$patchVersion$matchCandidate.windows.$buildVersion/PortableGit-$majorVersion.$minorVersion.$patchVersion$matchSuffix-32-bit.7z.exe#/dl.7z"
            }
        },
        "hash": {
            "url": "https://github.com/git-for-windows/git/releases/tag/v$majorVersion.$minorVersion.$patchVersion$matchCandidate.windows.$buildVersion",
            "regex": "<td>$basename</td>\\s*<td>$sha256</td>"
        }
    }
}
